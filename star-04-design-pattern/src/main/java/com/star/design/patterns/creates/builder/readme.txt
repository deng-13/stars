1. 定义：
  将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示
2. 四个重要的 角色
  1- 产品类 ： 通常是实现了 模版方法模式，即通过 继承 抽象类，拥有模版方法和基本方法->完成具体产品的构建
  2- 抽象构建者 ： 规范产品的组建，具体的实现由子类完成
  3- 具体构建者 ： 实现抽象构建者的 方法，并且返回一组构建好的对象
  4- 导演类 ：负责安排已有模块的顺序，然后告诉 builder 开始构建具体的产品
3. 优缺点
  优点：
    1- 封装性
    2- 建造者独立，易于扩展
    3- 可以动态的 对一个类进行扩展
4. 使用场景
  1- 相同的方法，不同的执行顺序，产生不同的事件结果时
  2- 需要给 一批兄弟类改装或加强功能的时候